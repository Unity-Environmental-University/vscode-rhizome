{
  "id": "fp-pair-assignment-design",
  "title": "Design: Pair Assignment in Flight Plans (Explicit vs Fluid)",
  "requester": "chorus-design",
  "workflow": "kitchen_table",
  "targets": [
    "How should pair assignments work in flight steps?",
    "Should masks be locked to personas or fluid?",
    "What's the right balance of structure vs flexibility?"
  ],
  "stories": [
    {
      "as": "a development team",
      "i_want": "clear guidance on how to pair for different work",
      "so_that": "we know who works together and what perspectives they bring"
    },
    {
      "as": "a new developer",
      "i_want": "to understand why certain pairs work together",
      "so_that": "I can adapt when the standard pair isn't available"
    }
  ],
  "created_at": "2025-10-27T16:45:00Z",
  "status": "active",
  "require_approval": false,
  "approval": {
    "state": "pending",
    "by": null,
    "at": null,
    "notes": null
  },
  "steps": [
    {
      "id": 1,
      "title": "UNA clarifies: What problem are we solving with pair assignments?",
      "status": "pending",
      "pair": {
        "questioner": "clarity_guardian",
        "answerer": "synthesizer"
      },
      "note": "Define the design space before proposing solutions"
    },
    {
      "id": 2,
      "title": "BRO proposes: Explicit assignment (pair locked to step, masks locked to personas)",
      "status": "pending",
      "pair": {
        "questioner": "challenger",
        "answerer": "executor"
      },
      "note": "Sketch the 'locked' approach: persona_a takes mask_x, persona_b takes mask_y for this step"
    },
    {
      "id": 3,
      "title": "ROOT adds: Fluid assignment (pair chosen at startup, renegotiated as needed)",
      "status": "pending",
      "pair": {
        "questioner": "pattern_hunter",
        "answerer": "synthesizer"
      },
      "note": "Contrast approach: masks are available, personas adopt them based on what step needs"
    },
    {
      "id": 4,
      "title": "UNA identifies tension: Explicit is clear (onboarding), fluid is adaptive (reality)",
      "status": "pending",
      "pair": {
        "questioner": "clarity_guardian",
        "answerer": "evidence_keeper"
      },
      "note": "Name the design trade-off clearly"
    },
    {
      "id": 5,
      "title": "BRO challenges: Can we get both? Explicit framework, fluid execution?",
      "status": "pending",
      "pair": {
        "questioner": "challenger",
        "answerer": "pattern_hunter"
      },
      "note": "Push past false binaryâ€”what if we structure it one way, operate it another?"
    },
    {
      "id": 6,
      "title": "ROOT synthesizes: Use default assignments (explicit), allow override (fluid)",
      "status": "pending",
      "pair": {
        "questioner": "synthesizer",
        "answerer": "advocate"
      },
      "note": "Propose hybrid: flight_plan_modes.yml defines default pairs per step type; teams can override"
    },
    {
      "id": 7,
      "title": "UNA documents the decision: Why this design, what problems it solves, what constraints remain",
      "status": "pending",
      "pair": {
        "questioner": "advocate",
        "answerer": "witness"
      },
      "note": "Record the thinking for future reference"
    },
    {
      "id": 8,
      "title": "BRO sketches implementation: What data structure, how does system enforce/suggest?",
      "status": "pending",
      "pair": {
        "questioner": "executor",
        "answerer": "skeptic"
      },
      "note": "Make the design concrete: can this actually be built?"
    }
  ],
  "log": [],
  "personas": {
    "active": [
      "una",
      "bro",
      "root"
    ],
    "conducting": "chorus",
    "voices": {
      "una": {
        "active": true,
        "mask": "clarity_guardian",
        "archive": []
      },
      "bro": {
        "active": true,
        "mask": "challenger",
        "archive": []
      },
      "root": {
        "active": true,
        "mask": "pattern_hunter",
        "archive": []
      }
    }
  },
  "phase": {
    "current": "kitchen_table",
    "entered_at": "2025-10-27T16:45:00Z",
    "transitions": []
  },
  "sprouts": [],
  "design_context": {
    "problem": "Flight plans need to assign code pairs for each step. How do we structure this without being rigid?",
    "constraints": [
      "Must be clear enough for onboarding",
      "Must be flexible enough for real-world adaptation",
      "Must surface the thinking, not hide it"
    ],
    "reference_materials": [
      "masks.yml - Available masks and their triggers/moves",
      "flight_plan_modes.yml - Thinking patterns per phase",
      "mob_programming_rpg - Role adoption as a game mechanic"
    ]
  }
}