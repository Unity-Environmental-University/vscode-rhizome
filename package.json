{
  "name": "vscode-rhizome",
  "displayName": "vscode-rhizome",
  "description": "Mindful development support with Socratic guidance (don-socratic) and distributed rhizome persona chorus",
  "version": "0.0.1",
  "keywords": [
    "mindfulness",
    "socratic",
    "personas",
    "development",
    "guidance",
    "reflection"
  ],
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-rhizome.healthCheck",
        "title": "vscode-rhizome: Health Check",
        "description": "Check if rhizome is properly installed and configured"
      },
      {
        "command": "vscode-rhizome.init",
        "title": "Initialize Rhizome",
        "description": "Set up rhizome context in workspace"
      },
      {
        "command": "vscode-rhizome.askPersona",
        "title": "Ask a persona",
        "description": "Choose which persona (dev-guide, code-reviewer, ux-advocate, etc.) to question your code"
      },
      {
        "command": "vscode-rhizome.openVoiceControl",
        "title": "Open Rhizome Voice Control",
        "description": "Preview voice input webview that streams audio to rhizome"
      },
      {
        "command": "vscode-rhizome.stub",
        "title": "Stub this function"
      },
      {
        "command": "vscode-rhizome.stubInfer",
        "title": "Stub this function (with LLM inference)"
      },
      {
        "command": "vscode-rhizome.documentWithPersona",
        "title": "Ask a persona to document this",
        "description": "Have a persona provide documentation/comments on selected code"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "vscode-rhizome.askPersona",
          "group": "1_modification@1",
          "when": "editorHasSelection"
        },
        {
          "command": "vscode-rhizome.documentWithPersona",
          "group": "1_modification@2",
          "when": "editorHasSelection"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "typecheck": "tsc --noEmit",
    "test": "mocha --require ts-node/register --extensions ts src/**/*.test.ts",
    "test:watch": "mocha --require ts-node/register --extensions ts --watch src/**/*.test.ts"
  },
  "dependencies": {
    "@babel/parser": "^7.23.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.0",
    "@types/node": "^20.0.0",
    "@types/vscode": "^1.85.0",
    "esbuild": "^0.19.0",
    "mocha": "^10.0.0",
    "ts-node": "^10.0.0",
    "typescript": "^5.3.0"
  }
}
